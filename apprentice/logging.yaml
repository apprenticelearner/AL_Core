# see: https://docs.python.org/2/library/logging.config.html#logging-config-dictschema
# and https://stackoverflow.com/questions/45465510/using-logging-with-coloredlogs

version: 1
disable_existing_loggers: True

formatters:
  standard:
    '()': 'coloredlogs.ColoredFormatter'
    format: '%(name)s:%(lineno)s | %(message)s'
  standard_colored:
    '()': 'coloredlogs.ColoredFormatter'
    format: '%(name)s:%(lineno)s | %(message)s'
  error:
    format: "%(levelname)s <PID %(process)d:%(processName)s> %(name)s.%(funcName)s(): %(message)s"

handlers:
  console:
    class: logging.StreamHandler
    level: ERROR #This seems to change the level globally, which is very annoying esp. w/ numba
    formatter: standard
    stream: ext://sys.stdout

#    info_file_handler:
#        class: logging.handlers.RotatingFileHandler
#        level: INFO
#        formatter: standard
#        filename: /tmp/info.log
#        maxBytes: 10485760 # 10MB
#        backupCount: 20
#        encoding: utf8
#
#    error_file_handler:
#        class: logging.handlers.RotatingFileHandler
#        level: ERROR
#        formatter: error
#        filename: /tmp/errors.log
#        maxBytes: 10485760 # 10MB
#        backupCount: 20
#        encoding: utf8
#
#    debug_file_handler:
#        class: logging.handlers.RotatingFileHandler
#        level: DEBUG
#        formatter: standard
#        filename: /tmp/debug.log
#        maxBytes: 10485760 # 10MB
#        backupCount: 20
#        encoding: utf8
#
#    critical_file_handler:
#        class: logging.handlers.RotatingFileHandler
#        level: CRITICAL
#        formatter: standard
#        filename: /tmp/critical.log
#        maxBytes: 10485760 # 10MB
#        backupCount: 20
#        encoding: utf8
#
#    warn_file_handler:
#        class: logging.handlers.RotatingFileHandler
#        level: WARN
#        formatter: standard
#        filename: /tmp/warn.log
#        maxBytes: 10485760 # 10MB
#        backupCount: 20
#        encoding: utf8

root:
  level: NOTSET
  handlers: [console]
  propogate: yes

loggers:
  <module>:
    level: INFO
    handlers: [console]
    #, info_file_handler, error_file_handler, critical_file_handler, debug_file_handler, warn_file_handler]
    propogate: no

#    <module.x>:
#        level: DEBUG
#        handlers: [info_file_handler, error_file_handler, critical_file_handler, debug_file_handler, warn_file_handler]
#        propogate: yes
